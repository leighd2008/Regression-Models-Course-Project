knots <- 0
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <-cbind(1, x,splineTerms)
yhat <- predict(lm(y~xMat-1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
1-0.05588046
2.67414865/(2.67414865+0.05588046)
1-(2.67414865/(2.67414865+0.05588046))
1/0.05588046
1/2.67414865/(2.67414865+0.05588046)
?mtcars
y <- galton$child
library(datasets)
data(galton)
library(UsingR)
library(UsingR); data(galton); library(reshape); long <- melt(galton)
y <- galton$child
x <- galton$parent
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
rbind(c(beta0, beta1), coef(lm(y ~ x)))
yc <- y - mean(y)
xc <- x - mean(x)
cor(yc, xc)
data("father.son")
fit <- lm(sheight~fheight,father.son)
summary(fit)$coef
x<-father.son$fheight
y <-father.son$``
y <-father.son$sheight
fit <- lm(y~x)
summary(fit)$coef
g <- ggplot(aes(x,y)) + geom_point()
g <- ggplot(aes(x,y))
g <- ggplot(father.son, aes(fheight,sheight))
g<- g+ geom_point()
g
g<- g+ geom_smooth(method="lm", formula = y~x)
g
xc <- x-mean(x)
yc <- y-mean(y)
lm(yc~xc)
xn <- xc/sd(x)
yn <- yc/sd(y)
cor(x,y)
cor(xc,yc)
cor(xn,yn)
lm(yn~xn)
library(UsingR) data(father.son) y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight) x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight) rho <- cor(x, y) library(ggplot2) g = ggplot(data.frame(x, y), aes(x = x, y = y)) g = g + geom_point(size = 5, alpha = .2, colour = "black") g = g + geom_point(size = 4, alpha = .2, colour = "red") g = g + geom_vline(xintercept = 0) g = g + geom_hline(yintercept = 0) g = g + geom_abline(position = "identity") g = g + geom_abline(intercept = 0, slope = rho, size = 2) g = g + geom_abline(intercept = 0, slope = 1 / rho, size = 2) g = g + xlab("Father's height, normalized") g = g + ylab("Son's height, normalized") g
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight) x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight) rho <- cor(x, y) library(ggplot2) g = ggplot(data.frame(x, y), aes(x = x, y = y)) g = g + geom_point(size = 5, alpha = .2, colour = "black") g = g + geom_point(size = 4, alpha = .2, colour = "red") g = g + geom_vline(xintercept = 0) g = g + geom_hline(yintercept = 0) g = g + geom_abline(position = "identity") g = g + geom_abline(intercept = 0, slope = rho, size = 2) g = g + geom_abline(intercept = 0, slope = 1 / rho, size = 2) g = g + xlab("Father's height, normalized") g = g + ylab("Son's height, normalized") g
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
rho <- cor(x, y)
g = ggplot(data.frame(x, y), aes(x = x, y = y))
g = g + geom_point(size = 5, alpha = .2, colour = "black")
g = g + geom_point(size = 4, alpha = .2, colour = "red")
g = g + geom_vline(xintercept = 0) g = g + geom_hline(yintercept = 0)
g = g + geom_abline(position = "identity")
g = g + geom_abline(intercept = 0, slope = rho, size = 2)
g = g + geom_abline(intercept = 0, slope = 1 / rho, size = 2)
g = g + xlab("Father's height, normalized")
g = g + ylab("Son's height, normalized")
g
setwd("~/Coursera/Regression Models Course Project")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse); library(data.table)
data(mtcars)
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
pairs(carsdt)
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
pairs(carsdt)
g = ggplot(carsdt, aes(x = mpg, y = am))
g = g + xlab("Transmission type (automatic / manual")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = "lm", colour = "black")
g
am
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = "lm", colour = "black")
g
am
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = "lm", colour = "black")
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, colour = "black")
g
?geom_smooth
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = x~factor(y), colour = "black")
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~factor(x), colour = "black")
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~factor(x), colour = "black", lwd = 2)
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g
View(carsdt)
g = ggplot(carsdt, aes(x = as.numeric(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g
g = ggplot(carsdt, aes(x = am, y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~as.numeric(x), colour = "black", lwd = 2)
g
g = ggplot(carsdt, aes(x = as.numeric(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g
?ggplot
g = ggplot(carsdt, aes(x = as.numeric(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g = g + + coord_cartesian(xlim = c(0, 3))
g
g = ggplot(carsdt, aes(x = as.numeric(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g = g + geom_smooth(method = lm, formula = y~x, colour = "black", lwd = 2)
g = g + expand_limits( x = c(0, 3))
g
fit <- lm(mpg~factor(am) carsdt)
e <- resid(fit)
fit <- lm(mpg~factor(am), carsdt)
e <- resid(fit)
sum(e)
x <- carsdt$am
h = ggplot(carsdt, aes(x= am, y= resid(lm(mpg~factor(am) carsdt)))
h = ggplot(carsdt, aes(x= am, y= resid(lm(mpg~factor(am), carsdt)))
h = ggplot(carsdt, aes(x= am, y= resid(lm(mpg~factor(am), carsdt))))
h = h + geom_point(size = 7, colour = "black", alpha=0.5)
h = h + geom_point(size = 5, colour = "blue", alpha=0.2)
h = h + geom_hline(yintercept = 0, size = 2)
h
fit <- lm(mpg~factor(am), carsdt)
e <- resid(fit)
carsdt$e <- resid(lm(mpg~factor(am), carsdt)) ##add residuals to data table
h = ggplot(carsdt, aes(x= am, y= resid(lm(mpg~factor(am), carsdt))))
h = h + geom_point(size = 7, colour = "black", alpha=0.5)
h = h + geom_point(size = 5, colour = "blue", alpha=0.2)
h = h + geom_hline(yintercept = 0, size = 2)
h
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit = fit), aes(y = e, x = fit, fill = fit))
h2 = h2 + geom_dotplot(binaxis = "y", size = 2, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit2 = fit2), aes(y = e, x = fit2, fill = fit2))
h2 = h2 + geom_dotplot(binaxis = "y", size = 2, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
?geom_dotplot
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit2 = fit2), aes(y = e, x = fit2, fill = fit2))
h2 = h2 + geom_dotplot(binaxis = "y", dotsize = 2, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit2 = fit2), aes(y = e, x = fit2, fill = fit2))
h2 = h2 + geom_dotplot(binaxis = "y", dotsize = 1, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit2 = fit2), aes(y = e, x = fit2, fill = fit2))
h2 = h2 + geom_dotplot(binaxis = "y", dotsize = .5, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
## vector containing residuals around average MPG and residuals from regression with mpg as outcome and transmission type as predictor (variation around regression line)
e <- c(resid(lm(mpg~1, carsdt)), resid(lm(mpg~factor(am), carsdt)))
##label residuals
fit2 = factor(c(rep("Itc", nrow(carsdt)), rep("Itc, slope", nrow(carsdt))))
h2 = ggplot(data.frame(e = e, fit2 = fit2), aes(y = e, x = fit2, fill = fit2))
h2 = h2 + geom_dotplot(binaxis = "y", dotsize = .1, stackdir = "center", binwidth = 20)
h2 = h2 + xlab("Fitting approach")
h2 = h2 + ylab("Residual MPG")
h2
data.frame(e = e, fit2 = fit2)
summary(fit)
fit1 <- lm(mpg~am, carsdt)
summary(fit1)
fit <- lm(mpg~factor(am), carsdt)
e <- resid(fit)
carsdt$e <- resid(lm(mpg~factor(am), carsdt)) ##add residuals to data table
h = ggplot(carsdt, aes(mpg, e))
h = h + xlab("Miles Per Gallon (MPG)")
h = h + ylab("Residuals")
h = h + geom_point(size = 7, colour = "black", alpha=0.5)
h = h + geom_point(size = 5, colour = "blue", alpha=0.2)
h = h + geom_hline(yintercept = 0, size = 2)
h
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse); library(data.table)
data(mtcars)
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
pairs(carsdt)
g = ggplot(carsdt, aes(x = as.numeric(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
g = ggplot(carsdt, aes(x = factor(am), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
pairs(carsdt)
g = ggplot(carsdt, aes(x = factor(am, labels = c("Automatic", "Manual")), y = mpg))
g = g + xlab("Transmission type (automatic / manual)")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
g = ggplot(carsdt, aes(x = factor(am, labels = c("Automatic", "Manual")), y = mpg))
g = g + xlab("Transmission type")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
g = ggplot(carsdt, aes(x = factor(am, labels = c("Automatic", "Manual")), y = mpg))
g = g + xlab("Transmission Type")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
t.test(mpg ~ am, mtcars)
tt = t.test(mpg ~ am, mtcars)
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
ggpairs(carsdt)
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse); library(data.table); library(GGally)
data(mtcars)
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
ggpairs(carsdt)
ggpairs(carsdt,
lower = list(continuous = "smooth",params = c(method = "loess", colour="blue")),
diag=list(continuous="bar", params=c(colour="blue")),
upper=list(params=list(corSize=15)),
axisLabels='show')
ggpairs(carsdt, lower = list(continuous = "smooth",params = c(method = "loess", colour="blue")),diag=list(continuous="bar", params=c(colour="blue")), upper=list(params=list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = "smooth",params = c(method = "loess", colour="blue")),diag=list(continuous="bar", params=c(colour="blue")), upper=list(params=list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = "smooth", params = c(method = "loess", colour="blue")),diag=list(continuous="bar", params=c(colour="blue")), upper=list(params=list(corSize=15)), axisLabels='show')
?ggpairs
help("wrap", package = "GGally")
carsdt <- as.data.table(mtcars)
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
ggpairs(carsdt)
ggpairs(mtcars, lower = list(continuous = "smooth"),diag=list(continuous="bar"), upper=list(axisLabels='show')
)
ggpairs(mtcars, lower = list(continuous = wrap("smooth", method = "loess", colour="blue")),diag=list(continuous=wrap("bar", colour="blue")), upper=list(wrap(corSize=15), axisLabels='show'))
ggpairs(mtcars, lower = list(continuous = wrap("smooth", method = "loess", colour="blue")),diag=list(continuous=wrap("bar", colour="blue")), upper=list(list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = wrap("smooth", method = "loess", colour="blue")),diag=list(continuous=wrap("barDiag", colour="blue")), upper=list(list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = wrap("smooth", method = "loess", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue")), upper=list(list(corSize=15)), axisLabels='show')
warnings()
ggpairs(mtcars, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue")), upper=list(list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
ggpairs(mtcars, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
carsdt <- as.data.table(mtcars)
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
carsdt <- as.data.table(mtcars)
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
ggpairs(carsdt, lower = list(combo = wrap("smooth", colour="blue")),diag=list(combo=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
carsdt <- as.data.table(mtcars)
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
lm(mpg~., carsdt)
summary(lm(mpg~., carsdt))
carsdt <- as.data.table(mtcars)
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
## set vs, am, gear, carb as factor variables
vars.factors <- c('vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
summary(lm(mpg~., carsdt))
install.packages("MASS")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse); library(data.table); library(GGally); library(MASS)
data(mtcars)
?step
carsdt.lm <- lm(mpg~., carsdt)
carsdt.stp <- stepAIC(carsdt.lm, trace = FALSE)
carsdt.stp$anova
?mass
?MASS
carsdt.stp <- stepAIC(carsdt.lm, direction = "both", trace = FALSE)
carsdt.stp$anova
install.packages("caret")
install.packages("leaps")
nul=lm(mpg~1, carsdt)
full=lm(mpg~., carsdt)
step(nul, scope = list(lower=nul, upper=full), direction = "forward")
for <- step(nul, scope = list(lower=nul, upper=full), direction = "forward")
forstp <- step(nul, scope = list(lower=nul, upper=full), direction = "forward")
bacstp <- step(nul, scope = list(lower=nul, upper=full), direction = "backward")
botstp <- step(nul, scope = list(lower=nul, upper=full), direction = "both")
bacstp <- step(full, direction = "backward")
null=lm(mpg~am, carsdt)
full=lm(mpg~., carsdt)
forstp <- step(null, scope = list(lower = null, upper=full), direction = "forward")
botstp <- step(null, scope = list(lower = null, upper=full), direction = "both")
bacstp <- step(null, scope = list(lower = null, upper=full), direction = "backward")
bacstp <- step(full), direction = "backward")
bacstp <- step(full, direction = "backward")
bothstp <- step(null, scope = list(upper=full), direction = "both")
lm(mpg~am, carsdt)
fit <- lm(mpg~am, carsdt)
View(carsdt)
fitcyl <- lm(mpg~am + cyl, carsdt)
fitdisp <- lm(mpg~am + disp, carsdt)
fithp <- lm(mpg~am + hp, carsdt)
fitdrat <- lm(mpg~am + drat, carsdt)
fitwt <- lm(mpg~am + wt, carsdt)
fitqsec <- lm(mpg~am + qsec, carsdt)
fitvs <- lm(mpg~am + vs, carsdt)
fitgear <- lm(mpg~am + gear, carsdt)
fitcarb <- lm(mpg~am + carb, carsdt)
fittable <- rbind(fit$coef, fitcyl$coef, fitdisp$coefficients)
fit$coef
fittable <- rbind(fit$coef, fitcyl$coef, fitdisp$coef)
summary(fit)$coef
summary(fit)$coef
summary(fitcyl)$coef
fit <- lm(mpg~factor(am) + ., carsdt)
library(car)
vif(fit)
fit <- lm(mpg~., carsdt)
vif(fit)
sqrt(vif(fit))
summary(cars)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + cyl + disp)
fit2 <- update(fit, mpg~am + cyl + disp + hp + drat)
fit3 <- update(fit, mpg~am + cyl + disp + hp + drat + wt + qsec)
fit4 <- update(fit, mpg~am + cyl + disp + hp + drat + wt + qsec +factor(vs) + factor(gear) +factor(carb))
anova(fit, fit1, fit2, fit3, fit4)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am +factor(vs) + factor(gear) +factor(carb))
fit2 <- update(fit, mpg~am +factor(vs) + factor(gear) +factor(carb)+ wt + qsec)
fit3 <- update(fit, mpg~am +factor(vs) + factor(gear) +factor(carb)+ wt + qsec+ hp + drat)
fit4 <- update(fit, mpg~am +factor(vs) + factor(gear) +factor(carb)+ wt + qsec+ hp + drat+ cyl + disp)
anova(fit, fit1, fit2, fit3, fit4)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + cyl + wt)
fit2 <- update(fit, mpg~am + cyl + wt + qsec +factor(vs))
fit3 <- update(fit, mpg~am  + cyl + wt + qsec +factor(vs)+ factor(gear) +factor(carb))
anova(fit, fit1, fit2, fit3)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + cyl + disp)
fit2 <- update(fit, mpg~am + cyl + disp + wt + qsec)
anova(fit, fit1, fit2)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + wt + qsec)
fit2 <- update(fit, mpg~am + wt + qsec + cyl + disp)
anova(fit, fit1, fit2)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am +factor(vs) +factor(carb))
fit2 <- update(fit, mpg~am +factor(vs) ++factor(carb)+ wt + qsec)
fit3 <- update(fit, mpg~am +factor(vs) +factor(carb)+ wt + qsec+ hp + drat)
fit4 <- update(fit, mpg~am +factor(vs)  +factor(carb)+ wt + qsec+ hp + drat+ cyl + disp)
anova(fit, fit1, fit2, fit3, fit4)
carsdt <- as.data.table(mtcars)
ggpairs(carsdt, lower = list(continuous = wrap("smooth", colour="blue")),diag=list(continuous=wrap("barDiag", bins =10, colour="blue", fill = "blue")), upper=list(list(corSize=15)), axisLabels='show')
## set vs, am, gear, carb and cyl as factor variables
vars.factors <- c('cyl','vs', 'am', 'gear', 'carb')
carsdt[, (vars.factors) := lapply(.SD, as.factor), .SDcols=vars.factors]
g = ggplot(carsdt, aes(x = factor(am, labels = c("Automatic", "Manual")), y = mpg))
g = g + xlab("Transmission Type")
g = g + ylab("Miles Per Gallon (MPG)")
g = g + geom_boxplot()
g
tt = t.test(mpg ~ am, mtcars)
fit <- lm(mpg~., carsdt)
vif(fit) ## variance inflation
sqrt(vif(fit)) ## sd inflation
summary(cars)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + factor(cyl) + disp)
fit2 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat)
fit3 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat + wt + qsec)
fit4 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat + wt + qsec +factor(vs) + factor(gear) +factor(carb))
anova(fit, fit1, fit2, fit3, fit4)
summary(cars)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + factor(cyl))
fit2 <- update(fit, mpg~am + factor(cyl) + drat)
fit3 <- update(fit, mpg~am + factor(cyl) + drat + wt + qsec)
fit4 <- update(fit, mpg~am + factor(cyl) + drat + wt + qsec +factor(vs) + factor(gear) +factor(carb))
anova(fit, fit1, fit2, fit3, fit4)
summary(cars)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + factor(cyl) + disp)
fit2 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat)
fit3 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat + wt + qsec)
fit4 <- update(fit, mpg~am + factor(cyl) + disp + hp + drat + wt + qsec +factor(vs) + factor(gear) +factor(carb))
anova(fit, fit1, fit2, fit3, fit4)
fit <- lm(mpg~factor(am), carsdt)
fit1 <- update(fit, mpg~am + wt)
fit2 <- update(fit, mpg~am + wt+ factor(cyl))
fit3 <- update(fit, mpg~am + wt+ factor(cyl)+ disp)
fit4 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp)
fit5 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp + drat)
fit6 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp + drat + factor(vs))
fit7 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp + drat + factor(vs) +
factor(carb))
fit8 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp + drat + factor(vs) +
factor(carb)+ factor(gear))
fit9 <- update(fit, mpg~am + wt+ factor(cyl)+ disp+ hp + drat + factor(vs) +
factor(carb)+ factor(gear) + qsec)
anova(fit, fit1, fit2, fit3, fit4, fit5, fit6, fit7, fit8, fit9)
